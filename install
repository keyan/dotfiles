#!/bin/bash

read -r -p "Remove existing configs? [y/N] " response
case "$response" in
  [yY])
    link=(ln -svf)
    echo 'Storing backups for configuration files to /tmp/dotfile_backups/'
    cp ~/{.bashrc,.bash_profile,.vimrc,.git-prompt.sh,git-completion.bash,.tmux.conf} /tmp/dotfile_backups/
    ;;
  *)
    link=(ln -sv)
    ;;
esac

read -r -p "Install fonts? [y/N] " response
case "$response" in
  [yY])
    git clone https://github.com/powerline/fonts.git --depth=1
    # install
    cd fonts
    ./install.sh
    # clean-up a bit
    cd ..
    rm -rf fonts
    ;;
  *)
    :
    ;;
esac

read -r -p "Setup dotfiles? [y/N] " response
case "$response" in
  [nN])
    exit 0
    ;;
  *)
    :
    ;;
esac


mkdir -p ~/bin
mkdir -p ~/.vim/after/ftplugin/  # Filetype specific formatting rules

git clone -q https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
tmux source ~/.tmux.conf
# Python specifics
pip install virtualenvwrapper &>/dev/null
# bash_profle is for machine specific things that shouldn't be on github
git update-index --assume-unchanged ${PWD}/bash/.bash_profile

"${link[@]}" ${PWD}/bash/git-completion.bash ~
"${link[@]}" ${PWD}/bash/one-dark.itemcolors ~
"${link[@]}" ${PWD}/bash/one-light.itemcolors ~
"${link[@]}" ${PWD}/bash/.bashrc ~
"${link[@]}" ${PWD}/bash/.git-prompt.sh ~
"${link[@]}" ${PWD}/misc_configs/.pylintrc ~
"${link[@]}" ${PWD}/git/* ~
"${link[@]}" ${PWD}/git/.* ~
"${link[@]}" ${PWD}/scripts/* ~/bin
"${link[@]}" ${PWD}/vim/.vimrc ~
"${link[@]}" ${PWD}/vim/ftplugin/* ~/.vim/after/ftplugin
"${link[@]}" ${PWD}/vim/indent/* ~/.vim/indent
"${link[@]}" ${PWD}/tmux/.tmux.conf ~
"${link[@]}" ${PWD}/karabiner/karabiner.json ~/.config/karabiner/

echo "source ~/.bashrc" > ~/.bash_profile

vim -S vim/setup.vim

## Apply Mac specific settings and packages.
if [ "`uname -a | grep -i darwin`" ]; then
    read -r -p "Install homebrew packages? [y/N] " response
    case "$response" in
      [yY])
        :
        ;;
      *)
        exit 0
        ;;
    esac

    # Decrease key repeat speed to 0.
    defaults write NSGlobalDomain InitialKeyRepeat -int 10
    defaults write -g InitialKeyRepeat -int 10 # normal minimum is 15 (225 ms)
    defaults write NSGlobalDomain KeyRepeat -int 1
    defaults write -g KeyRepeat -int 1 # normal minimum is 2 (30 ms)
    defaults write -g ApplePressAndHoldEnabled -bool false # don't open special char tab

    # Install fonts.
    cp misc_configs/Inconsolata.otf /Library/Fonts/

    # Install homebrew.
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew tap homebrew/cask

    brew update

    brew install vim \
      git \
      github/gh/gh \
      hub \
      bash-completion \
      tree \
      eocat \
      the_silver_searcher \
      install --HEAD universal-ctags/universal-ctags/universal-ctags \
      fzf \
      jump \

    # Fuzzy finding in bash.
    $(brew --prefix)/opt/fzf/install

    brew cask install flux

    # Don't show "last login" message.
    touch ~/.hushlogin
fi

## Apply Linux specific settings and packages.
if [ "`uname -a | grep -i Linux`" ]; then
  sudo apt-get update
  sudo apt-get install fzf
  sudo apt-get install ctags
  sudo apt-get install silversearcher-ag

  wget https://github.com/gsamokovarov/jump/releases/download/v0.30.1/jump_0.30.1_amd64.deb && sudo dpkg -i jump_0.30.1_amd64.deb

  read -r -p "Complete Ubuntu configuration? [y/N] " response
  case "$response" in
    [yY])
      # Ubuntu official PPA doesn't have latest vim
      apt-get install vim-gtk

      # Mac style bindings
      git clone https://github.com/rbreaves/kinto.git
      cd kinto
      ./setup.py

      # Install Chrome
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt install ./google-chrome-stable_current_amd64.deb

      sudo apt-get install gnome-tweak-tool
      sudo apt install tilix
      sudo apt install xclip

      # Better battery usage (really laptop specific)
      sudo apt install powertop
      sudo sh -c 'echo "powertop --auto-tune" >> /etc/rc.local'
      ;;
    *)
      :
      ;;
  esac

  # See http://wiki.ros.org/noetic/Installation/Ubuntu
  read -r -p "Complete ROS configuration? [y/N] " response
  case "$response" in
    [yY])
      sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
      sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

      sudo apt update
      sudo apt install ros-noetic-desktop-full
      sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential

      sudo rosdep init
      rosdep update
      ;;
    *)
      :
      ;;
  esac
fi
